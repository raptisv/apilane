@using Apilane.Portal.Models;
@using Apilane.Portal.Abstractions;
@inject IPortalSettingsService _portalSettingsService;
@model LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
    var portalSettings = _portalSettingsService.Get();
}

@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, true, new { @class = "form-horizontal", role = "form" }))
{
    <h2 class="text-center text-light">Apilane</h2>
    <div class="illustration">
        <i class="icon ion-ios-locked-outline"></i>
    </div>
    <div class="form-group mb-3">
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", maxlength = 50, placeholder = "Email" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", maxlength = 50, placeholder = "Password" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationMessage("CustomError", new { @class = "text-danger" })
    </div>
    <div class="form-group d-grid">
        <button class="btn btn-primary btn-block" type="submit">Log In</button>
    </div>
    <a href="@Url.Action("ForgotPassword", "Account")" class="forgot mt-2">Forgot password?</a>

    @if (portalSettings.AllowRegisterToPortal)
    {
        <br>
        <span>Do not have an account? </span>
        <a href="@Url.Action("Register", "Account")" class="signup">Sign up</a>
    }
}


