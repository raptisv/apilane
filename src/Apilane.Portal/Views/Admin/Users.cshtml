@using Apilane.Common;
@using Apilane.Portal.Models;
@using Microsoft.AspNetCore.Identity;
@model (List<ApplicationUser> Users, List<IdentityRole> Roles, List<IdentityUserRole<string>> UsersRoles)
@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var adminRole = Model.Roles.SingleOrDefault(x => (x.Name ?? string.Empty).Equals(Globals.AdminRoleName, StringComparison.OrdinalIgnoreCase))
        ?? throw new Exception($"Role admin not found");
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <h4 class="card-header">Users</h4>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-sm table-borderless table-hover">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Set role</th>
                                <th>Last login</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users.OrderByDescending(x => x.LastLogin))
                            {
                                var currentUserId = User.Identity?.GetUserId() ?? throw new Exception("Unuatohrized");
                                var isAdmin = Model.UsersRoles.Any(r => r.UserId == user.Id && r.RoleId == adminRole.Id);
                                var isCurrentUser = currentUserId == user.Id;

                                <tr>
                                    <td>@user.Id</td>
                                    <td>@user.Email</td>
                                    <td>
                                        @(isAdmin ? "admin" : "user")
                                    </td>
                                    <td>
                                        @if (!isCurrentUser)
                                        {
                                            if (isAdmin)
                                            {
                                                using (Html.BeginForm("SetUserRole", "Admin", new { userId = user.Id, setAsAdmin = false }, FormMethod.Post, true, new { role = "form" }))
                                                {
                                                    <button type="submit" class="btn btn-default btn-xs ignore-default-submit">Set as user</button>
                                                }
                                            }
                                            else
                                            {
                                                using (Html.BeginForm("SetUserRole", "Admin", new { userId = user.Id, setAsAdmin = true }, FormMethod.Post, true, new { role = "form" }))
                                                {
                                                    <button type="submit" class="btn btn-default btn-xs ignore-default-submit">Set as admin</button>
                                                }
                                            }
                                        }
                                    </td>
                                    <td class="date-utc">@user.LastLogin.ToString("s")</td>

                                   
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>